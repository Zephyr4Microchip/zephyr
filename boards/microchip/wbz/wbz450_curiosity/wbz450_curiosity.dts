/*
 * Copyright (c) 2025 Microchip Technology Inc.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <microchip/pic32c/pic32cx_bz/bz2x/bz24/pic32cx1012bz24032.dtsi>
#include "wbz450_curiosity-pinctrl.dtsi"
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
	model = "Microchip WBZ450 Curiosity";
	compatible = "microchip,wbz450-curiosity";

	chosen {
		zephyr,console = &sercom0;
		zephyr,shell-uart = &sercom0;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &code_partition;
		zephyr,bt-hci = &bt_hci_microchip;
		zephyr,bt-c2h-uart = &sercom0;
	};

	leds {
		compatible = "gpio-leds";
		led0: led_0 {
			gpios = <&porta 9 GPIO_ACTIVE_HIGH>;
			label = "Red LED 1";
		};
		led1: led_1 {
			gpios = <&porta 10 GPIO_ACTIVE_HIGH>;
			label = "Green LED 1";
		};
		led2: led_2 {
			gpios = <&portb 5 GPIO_ACTIVE_HIGH>;
			label = "Blue LED 1";
		};
	};

	pwmleds {
		compatible = "pwm-leds";
		pwm_led0: pwm_led_0 {
			status = "okay";
			pwms = <&tc0 1 PWM_MSEC(20) 0>;
		};
	};

	buttons {
		compatible = "gpio-keys";
		button0: button_0 {
			gpios = <&portb 4 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "SW0";
			zephyr,code = <INPUT_KEY_0>;
		};
	};
	/* These aliases are provided for compatibility with samples */
	aliases {
		led0 = &led0;
		led1 = &led1;
		led2 = &led2;
		sw0 = &button0;
		rtc = &rtc;
		pwm-led0 = &pwm_led0;
	};
};

&cpu0 {
	clock-frequency = <64000000>;
};


&sercom0 {
	status = "okay";
	compatible = "microchip,sercom-g1-uart";
		rxpo = <1>;
		txpo = <0>;
	current-speed = <115200>;
	pinctrl-0 = <&sercom0_uart_default>;
	pinctrl-names = "default";

	dmas = <&dmac 0 4>, <&dmac 1 5>;
	dma-names = "rx", "tx";
};

&bt_hci_microchip {
	status = "okay";
};

&trng {
	status = "okay";
};

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		code_partition: partition@0 {
			label = "code";
			reg = <0x0 DT_SIZE_K(1024-16)>;  /* Start at 0x01000000, size 1 MB */
			read-only;
		};

		/*
		 * The final 16 KiB is reserved for the application.
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@FC000 {
			label = "storage";
			reg = <0xFC000 0x00004000>;
		};
	};
};

&porta {
	status = "okay";
};

&portb {
	status = "okay";
};

&rtc {
	compatible = "microchip,rtc-g1";
	status = "okay";
	prescaler = <1024>;
	alarms-count = <2>;
	cal-constant = <1048576>;  /*(8192 * 128 = 1048576)*/
};

&tcc0 {
	status = "disabled";
	compatible = "microchip,tcc-g1-pwm";
	#pwm-cells = <3>;
	pinctrl-0 = <&tcc0_pwm_default>;
	pinctrl-names = "default";
	max-bit-width = <24>;
	prescaler = <1>;
	channels = <6>;
};

&tcc1 {
	status = "disabled";
	compatible = "microchip,tcc-g1-pwm";
	#pwm-cells = <3>;
	pinctrl-0 = <&tcc1_pwm_default>;
	pinctrl-names = "default";
	max-bit-width = <24>;
	prescaler = <1>;
	channels = <6>;
};

&tcc2 {
	status = "disabled";
	compatible = "microchip,tcc-g1-pwm";
	#pwm-cells = <3>;
	pinctrl-0 = <&tcc2_pwm_default>;
	pinctrl-names = "default";
	max-bit-width = <16>;
	prescaler = <256>;
	channels = <2>;
};

/* TCC: In 16-bit/32-bit mode, the pulse value is written to CC[1]. This is because they are in MPWM
 *		mode. In MPWM mode, the wave output will can be observed in WO[1]
 */
&tc0 {
	status = "okay";
	compatible = "microchip,tc-g1-pwm";
	#pwm-cells = <3>;
	pinctrl-0 = <&tc0_pwm_default>;
	pinctrl-names = "default";
	max-bit-width = <16>;
	prescaler = <256>;
	channels = <2>;
};

&tc1 {
	status = "disabled";
	compatible = "microchip,tc-g1-pwm";
	#pwm-cells = <3>;
	pinctrl-0 = <&tc1_pwm_default>;
	pinctrl-names = "default";
	max-bit-width = <16>;
	prescaler = <256>;
	channels = <2>;
};

&tc2 {
	status = "disabled";
	compatible = "microchip,tc-g1-pwm";
	#pwm-cells = <3>;
	pinctrl-0 = <&tc2_pwm_default>;
	pinctrl-names = "default";
	max-bit-width = <16>;
	prescaler = <256>;
	channels = <2>;
};

&tc3 {
	status = "disabled";
	compatible = "microchip,tc-g1-pwm";
	#pwm-cells = <3>;
	pinctrl-0 = <&tc3_pwm_default>;
	pinctrl-names = "default";
	max-bit-width = <16>;
	prescaler = <256>;
	channels = <2>;
};
